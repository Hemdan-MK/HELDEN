<!DOCTYPE html>
<html lang="en">

<head>
<!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<title>Category Panel</title>
<!-- Bootstrap CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
<link rel="stylesheet" href="/admin/admin.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<style>
	.search input {
		border-radius: 20px;
	}
</style>
</head>

<body>
	<div class="sidebar">
        <div class="sidebar-brand">
            <span class="brand-full">H E L D E N</span>
            <span class="brand-short">H</span>
        </div>
        <ul class="nav flex-column mt-3">
            <li class="nav-item">
                <a class="nav-link" href="/admin/dashboard">
                    <i class="fas fa-th-large"></i>
                    <span>Dashboard</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/userManagement">
                    <i class="fas fa-users"></i>
                    <span>User Management</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/productManagement">
                    <i class="fas fa-box"></i>
                    <span>Product Management</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/orderManagement">
                    <i class="fas fa-shopping-cart"></i>
                    <span>Order Management</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link active" href="/admin/categoryManagement">
                    <i class="fas fa-folder"></i>
                    <span>Category Management</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/admin/couponManagement">
                    <i class="fas fa-ticket-alt"></i>
                    <span>Coupon Management</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link " href="/admin/referralManagement">
                    <i class="fas fa-gift"></i>
                    <span>Referal Management</span>
                </a>
            </li>
            <li class="nav-item bottom">
                <a class="nav-link text-warning" href="/admin/logout">
                    <i class="fas fa-sign-out-alt"></i>
                    <span>Logout</span>
                </a>
            </li>
        </ul>
    </div>
	<div class="main-content">
		<!-- Page Content -->
		<div class="container-fluid" style="width: 100%; height: 100vh;">
			<!-- Navbar -->
			<h2 class="mb-4 pt-3">Category Management</h2>

			<form class="nav-link mt-2 mt-md-0 d-lg-flex search">
				<input type="text" class="form-control" placeholder="Search users">
				<button style=" margin-left: 10px;" class="btn btn-primary">Search</button>
			</form>

			<div class="table-responsive">
				<table>
					<thead>
						<tr>
							<th>Index</th>
							<th>Name</th>
							<th>Picture</th>
							<th>Product Count</th>
							<th>Created Date</th>
							<th>Updated Date</th>
							<th>Update</th>
							<th>Status</th>
							<th>Offers</th>
						</tr>
					</thead>
					<tbody>
						<% categoriesWithCounts.forEach((category, index)=> { %>
						<tr id="category-<%= category._id %>">
							<td>
								<%= index + 1 %>
							</td>
							<td>
								<%= category.name %>
							</td>
							<td><img src="<%= category.image %>" class="img-thumbnail" style="width: 60px; height: 60px;">
							</td>
							<td>
								<%= category.productCount %>
							</td>
							<td>
								<%= new Date(category.createdAt).toLocaleDateString() %>
							</td>
							<td>
								<%= new Date(category.updatedAt).toLocaleDateString() %>
							</td>
							<td><a href="/admin/categoryManagement/update/<%= category._id %>" class="btn btn-outline-warning btn-sm">Update</a></td>
							<td>
								<button data-id="<%= category._id %>" class="btn btn-outline-success btn-sm btn-delete">Unlink</button>
							</td>
							<% if(!category.offerApplied) {%>
							<td>
								<button data-id="<%= category._id %>" class="btn btn-outline-primary btn-sm btn-offer">Add Offer</button>
							</td>
							<% } else { %>
							<td>
								<button data-id="<%= category._id %>" class="btn btn-outline-danger btn-sm btn-offer-delete">Remove Offer</button>
							</td>
							<% } %>
						</tr>
						<% }); %>
					</tbody>
				</table>
			</div>
			<div class="pagination-container my-4">
				<nav aria-label="Page navigation">
					<ul class="pagination pagination-dark justify-content-center">
						<% if (currentPage > 1) { %>
						<li class="page-item">
							<a class="page-link" href="/admin/categoryManagement?page=<%= currentPage - 1 %>&limit=<%= limit %>">
								<span>&laquo; Previous</span>
							</a>
						</li>
						<% } %>

						<% for (let i = 1; i <= totalPages; i++) { %>
						<li class="page-item <%= i === currentPage ? 'active' : '' %>">
							<a class="page-link" href="/admin/categoryManagement?page=<%= i %>&limit=<%= limit %>">
								<%= i %>
							</a>
						</li>
						<% } %>

						<% if (currentPage < totalPages) { %>
						<li class="page-item">
							<a class="page-link" href="/admin/categoryManagement?page=<%= currentPage + 1 %>&limit=<%= limit %>">
								<span>Next &raquo;</span>
							</a>
						</li>
						<% } %>
					</ul>
				</nav>
			</div>
			<div class="action-buttons">
				<button class="btn btn-primary btn-lg" id="btn-add-cat">Create New Category</button>
				<button class="btn btn-danger btn-lg" id="btn-del-cat">Unlisted Categories</button>
			</div>
		</div>
	</div>

	<div id="offerModal" class="modal" style="display: none;">
		<div class="modal-dialog w-100">
			<div class="modal-content">
				<div class="modal-header">
					<h5>Add Offer</h5>
					<button id="closeModal" class="close">&times;</button>
				</div>
				<div class="modal-body">
					<form id="offerForm">
						<input type="hidden" id="categoryId" name="categoryId">
						<div class="form-group">
							<label for="offerPercentage">Offer Percentage</label>
							<input type="number" id="offerPercentage" name="offerPercentage" class="form-control" placeholder="Enter percentage" required>
						</div>
						<button type="submit" class="btn btn-primary">Save Offer</button>
					</form>
				</div>
			</div>
		</div>
	</div>

	<!-- JavaScript -->
	<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
	<script>
		// SOFT DELETE PRODUCT
		document.querySelectorAll('.btn-delete').forEach(button => {
			button.addEventListener('click', function(e) {
				const categoryId = e.target.getAttribute('data-id');

				fetch(`/admin/categoryManagement/unlink`, {
						method: 'PUT',
						headers: {
							'Content-Type': 'application/json'
						},
						body: JSON.stringify({
							categoryId: categoryId
						})
					})
					.then(response => response.json())
					.then(data => {
						if(data.success) {
							window.location.reload();
						} else {
							Swal.fire({
								icon: 'error',
								title: 'Oops...',
								text: 'Could not delete the category!',
								confirmButtonColor: '#d33',
								confirmButtonText: 'OK'
							});
						}
					})
					.catch(error => {
						console.error('Error:', error);
						Swal.fire({
							icon: 'error', // Adds a red error icon
							title: 'Error!',
							text: 'An error occurred while deleting the category.',
							confirmButtonColor: '#d33', // Red button for confirmation
							confirmButtonText: 'OK'
						});
					});
			});
		});

		// ADDING CATEGORY
		document.getElementById('btn-add-cat').addEventListener('click', () => {
			window.location.href = '/admin/categoryManagement/add';
		});

		// DELETE CATEGORY
		document.getElementById('btn-del-cat').addEventListener('click', () => {
			window.location.href = '/admin/categoryManagement/del';
		});
	</script>
	<script>
		// Select modal and form elements
		const offerModal = document.getElementById('offerModal');
		const closeModalBtn = document.getElementById('closeModal');
		const offerForm = document.getElementById('offerForm');
		const categoryIdInput = document.getElementById('categoryId');
		const offerPercentageInput = document.getElementById('offerPercentage');

		// Event listener for the "Add Offer" button
		document.querySelectorAll('.btn-offer').forEach(button => {
			button.addEventListener('click', (event) => {
				const categoryId = event.target.getAttribute('data-id');
				categoryIdInput.value = categoryId; // Set category ID in the form
				offerModal.style.display = 'flex'; // Show the modal
			});
		});

		// Event listener to close the modal when clicking the close button
		closeModalBtn.addEventListener('click', () => {
			offerModal.style.display = 'none'; // Hide the modal
		});

		// Event listener to close the modal when clicking outside the modal content
		offerModal.addEventListener('click', (event) => {
			if(event.target === offerModal) {
				offerModal.style.display = 'none'; // Close the modal when clicking outside
			}
		});

		// Event listener for form submission
		offerForm.addEventListener('submit', async (event) => {
			event.preventDefault(); // Prevent default form submission

			const categoryId = categoryIdInput.value;
			const offerPercentage = offerPercentageInput.value;

			// Validate offer percentage
			if(!offerPercentage || offerPercentage <= 0) {
				Swal.fire({
					icon: 'warning',
					title: 'Invalid Offer',
					text: 'Please enter a valid offer percentage greater than 0.',
					confirmButtonText: 'OK'
				});
				return;
			}

			if(offerPercentage > 70) {
				Swal.fire({
					icon: 'warning',
					title: 'Invalid Offer',
					text: 'The maximum allowed offer percentage is 70%.',
					confirmButtonText: 'OK'
				});
				return;
			}

			try {
				// Send the data to the backend
				const response = await fetch('/admin/categoryManagement/offers/add', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({
						categoryId,
						offerPercentage
					}),
				});

				if(response.ok) {
					offerModal.style.display = 'none'; // Close the modal
					Swal.fire({
						icon: 'success',
						title: 'Offer Added',
						text: 'Offer has been successfully applied.',
						confirmButtonText: 'OK'
					}).then(() => {
						window.location.reload();
					});
				} else {
					const error = await response.json();
					Swal.fire({
						icon: 'error',
						title: 'Error',
						text: `Error adding offer: ${error.message}`,
						confirmButtonText: 'OK'
					});
				}
			} catch (error) {
				Swal.fire({
					icon: 'error',
					title: 'Error',
					text: 'There was an issue with the offer submission.',
					confirmButtonText: 'OK'
				});
			}
		});
	</script>

	<script>
		// REMOVE OFFER
		document.querySelectorAll('.btn-offer-delete').forEach(button => {
			button.addEventListener('click', async (event) => {
				const categoryId = event.target.getAttribute('data-id'); // Get the category ID

				try {
					// Send the data to the backend to remove the offer
					const response = await fetch('/admin/categoryManagement/offers/delete', {
						method: 'DELETE',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify({
							categoryId
						}),
					});

					if(response.ok) {
						Swal.fire({
							icon: 'success',
							title: 'Offer Removed',
							text: 'The offer has been successfully removed.',
							confirmButtonText: 'OK'
						}).then(() => {
							window.location.reload();
						});

					} else {
						const error = await response.json();
						Swal.fire({
							icon: 'error',
							title: 'Error',
							text: `Error removing offer: ${error.message}`,
							confirmButtonText: 'OK'
						});
					}
				} catch (error) {
					Swal.fire({
						icon: 'error',
						title: 'Error',
						text: 'There was an issue with the offer removal.',
						confirmButtonText: 'OK'
					});
				}
			});
		});
	</script>

	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</body>

</html>