<!DOCTYPE html>
<html lang="en">

<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<title>Admin Panel</title>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Custom CSS -->
<link rel="stylesheet" href="/admin/admin.css">
<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<style>
	/* Custom Styles */


	.btn-ban,
	.btn-view {
		cursor: pointer;
	}

	.badge-outline-danger {
		border: 1px solid red;
		color: red;
		padding: 5px 10px;
	}

	.badge-outline-success {
		border: 1px solid green;
		color: green;
		padding: 5px 10px;
	}

	.table-responsive {
		margin-top: 20px;
	}

	.userInfoView {
		margin-top: 30px;
		background: white;
		padding: 20px;
		border-radius: 8px;
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
	}

	.search input {
		border-radius: 20px;
	}

	.btn-primary {
		border-radius: 20px;
	}
</style>
</head>

<body>
	<div class="sidebar">
		<div class="sidebar-brand">
			<span class="brand-full">H E L D E N</span>
			<span class="brand-short">H</span>
		</div>
		<ul class="nav flex-column mt-3">
			<li class="nav-item">
				<a class="nav-link" href="/admin/dashboard">
					<i class="fas fa-th-large"></i>
					<span>Dashboard</span>
				</a>
			</li>
			<li class="nav-item">
				<a class="nav-link active" href="/admin/userManagement">
					<i class="fas fa-users"></i>
					<span>User Management</span>
				</a>
			</li>
			<li class="nav-item">
				<a class="nav-link " href="/admin/productManagement">
					<i class="fas fa-box"></i>
					<span>Product Management</span>
				</a>
			</li>
			<li class="nav-item">
				<a class="nav-link" href="/admin/orderManagement">
					<i class="fas fa-shopping-cart"></i>
					<span>Order Management</span>
				</a>
			</li>
			<li class="nav-item">
				<a class="nav-link" href="/admin/categoryManagement">
					<i class="fas fa-folder"></i>
					<span>Category Management</span>
				</a>
			</li>
			<li class="nav-item">
				<a class="nav-link" href="/admin/couponManagement">
					<i class="fas fa-ticket-alt"></i>
					<span>Coupon Management</span>
				</a>
			</li>
			<li class="nav-item">
				<a class="nav-link " href="/admin/referralManagement">
					<i class="fas fa-gift"></i>
					<span>Referal Management</span>
				</a>
			</li>
			<li class="nav-item bottom">
				<a class="nav-link text-warning" href="/admin/logout">
					<i class="fas fa-sign-out-alt"></i>
					<span>Logout</span>
				</a>
			</li>
		</ul>
	</div>
	<!-- Sidebar -->
	<!-- Main Content -->
	<div class="main-content">
		<!-- Main Panel -->
		<div class="container-fluid" style="width: 100%;height: 100vh;">
			<!-- <div class="card-body"> -->
			<h2 class="mb-4 pt-3">Users Status</h2>

			<!-- Search Bar -->
			<form class="nav-link mt-2 mt-md-0 d-lg-flex search">
				<input type="text" class="form-control custom-input" placeholder="Search users">
			</form>

			<!-- Table -->
			<div class="table-responsive">
				<table>
					<thead>
						<tr>
							<th>Username</th>
							<th>Email</th>
							<th>Role</th>
							<th>Join Date</th>
							<th>Ban</th>
							<th>View</th>
						</tr>
					</thead>
					<tbody>
						<% user.forEach((value) => { %>
						<tr>
							<td><%= value.name %></td>
							<td><%= value.email %></td>
							<td><%= value.role %></td>
							<td>
								<% const createdAt = new Date(value.createdAt); const day = createdAt.getDate(); const month = createdAt.getMonth() + 1; const year = createdAt.getFullYear(); const formattedDate = day + ":" + month + ":" + year; %>
								<%= formattedDate %>
							</td>
							<td>
								<button data-id="<%= value.email %>" class="btn btn-outline-danger btn-ban">
									<%= value.isDeleted ? 'Unban' : 'Ban' %>
								</button>
							</td>
							<td>
								<button data-id="<%= value.email %>" class="btn btn-outline-primary btn-view">View</button>
							</td>
						</tr>
						<% }); %>
					</tbody>
				</table>
			</div>
			<div class="pagination-container my-4">
				<ul class="pagination pagination-dark justify-content-center">
					<% if (currentPage > 1) { %>
					<li class="page-item">
						<a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit %>">
							<span>&laquo; Previous</span>
						</a>
					</li>
					<% } %>

					<% for (let i = 1; i <= totalPages; i++) { %>
					<li class="page-item <%= currentPage === i ? 'active' : '' %>">
						<a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
					</li>
					<% } %>

					<% if (currentPage < totalPages) { %>
					<li class="page-item">
						<a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit %>">
							<span>Next &raquo;</span>
						</a>
					</li>
					<% } %>
				</ul>
			</div>
		</div>
	</div>
	<div class="modal fade" id="userDetailModal" tabindex="-1" aria-labelledby="userDetailModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<!-- Modal Header -->
				<div class="modal-header">
					<h5 class="modal-title" id="userDetailModalLabel">User Details</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>

				<!-- Modal Body -->
				<div class="modal-body">
					<div class="user-icon-section d-flex align-items-center">
						<div class="user-icon me-3">
							<i class="bi bi-person-fill fs-1"></i>
						</div>
						<div class="user-info">
							<p class="mb-1"><strong>Username:</strong> <span id="modalUsername"></span></p>
							<p class="mb-1"><strong>Email:</strong> <span id="modalEmail"></span></p>
						</div>
					</div>
					<p class="mt-3"><strong>Role:</strong> <span id="modalRole"></span></p>
					<p><strong>Join Date:</strong> <span id="modalJoinDate"></span></p>
					<p><strong>Status:</strong> <span id="modalStatus"></span></p>
				</div>

				<!-- Modal Footer -->
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
			</div>
		</div>
	</div>




	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
	<script>
		// Ban button functionality
		document.querySelectorAll('.btn-ban').forEach(button => {
			button.addEventListener('click', async function() {
				const email = this.getAttribute('data-id');

				try {
					const response = await fetch(`/admin/userManagement/ban?email=${email}`, {
						method: 'PUT',
						headers: {
							'Content-Type': 'application/json',
						}
					});

					if(!response.ok) {
						const errorText = await response.text(); // Get error details
						throw new Error(`Failed to update ban status: ${response.status} - ${errorText}`);
					}

					const result = await response.json();
					Swal.fire({
						icon: 'success', // Green checkmark icon for success
						title: 'Success!',
						text: result.message, // Dynamically displays the message from the controller
						timer: 1500,
						showConfirmButton: false,
						timerProgressBar: true,
					});

					// Update button text and class based on the new ban status
					if(result.isDeleted) {
						this.textContent = 'Unban';
						this.classList.remove('badge-outline-danger');
						this.classList.add('badge-outline-success');
					} else {
						this.textContent = 'Ban';
						this.classList.remove('badge-outline-success');
						this.classList.add('badge-outline-danger');
					}

				} catch (error) {
					console.error('Error toggling ban status:', error.message);
					alert(`Error toggling ban status: ${error.message}`);
				}
			});
		});

		// View button functionality
		document.querySelectorAll('.btn-view').forEach(button => {
			button.addEventListener('click', async function() {
				const email = this.getAttribute('data-id');

				try {
					const response = await fetch(`/admin/userManagement/view?email=${email}`, {
						method: 'GET',
						headers: {
							'Content-Type': 'application/json',
						}
					});

					if(!response.ok) {
						throw new Error('Failed to fetch user details');
					}

					const userDetails = await response.json();

					document.getElementById('modalUsername').textContent = userDetails.username;
					document.getElementById('modalEmail').textContent = userDetails.email;
					document.getElementById('modalRole').textContent = userDetails.role;
					document.getElementById('modalJoinDate').textContent = userDetails.joinDate;
					document.getElementById('modalStatus').textContent = userDetails.isDeleted ? 'Banned' : 'Active';

					const userDetailModal = new bootstrap.Modal(document.getElementById('userDetailModal'));
					userDetailModal.show();

				} catch (error) {
					console.error('Error fetching user details:', error);
					alert('Failed to retrieve user details');
				}
			});
		});
	</script>

	<script>
		// Searaching
		function debounce(func, wait) {
			let timeout;
			return function executedFunction(...args) {
				const later = () => {
					clearTimeout(timeout);
					func(...args);
				};
				clearTimeout(timeout);
				timeout = setTimeout(later, wait);
			};
		}

		function updateTable(users) {
			const tbody = document.querySelector('tbody');
			tbody.innerHTML = '';

			users.forEach(user => {
				const createdAt = new Date(user.createdAt);
				const formattedDate = `${createdAt.getDate()}:${createdAt.getMonth() + 1}:${createdAt.getFullYear()}`;

				const row = `
            <tr>
                <td>${user.name}</td>
                <td>${user.email}</td>
                <td>${user.role}</td>
                <td>${formattedDate}</td>
                <td>
                    <button data-id="${user.email}" class="btn btn-outline-danger btn-ban">
                        ${user.isDeleted ? 'Unban' : 'Ban'}
                    </button>
                </td>
                <td>
                    <button data-id="${user.email}" class="btn btn-outline-primary btn-view">View</button>
                </td>
            </tr>
        `;
				tbody.innerHTML += row;
			});

			// Reattach event listeners
			attachEventListeners();
		}

		// Function to update pagination
		function updatePagination(currentPage, totalPages, limit) {
			const paginationContainer = document.querySelector('.pagination');
			let paginationHTML = '';

			if(currentPage > 1) {
				paginationHTML += `
            <li class="page-item">
                <a class="page-link" href="?page=${currentPage - 1}&limit=${limit}">
                    <span>&laquo; Previous</span>
                </a>
            </li>
        `;
			}

			for(let i = 1; i <= totalPages; i++) {
				paginationHTML += `
            <li class="page-item ${currentPage === i ? 'active' : ''}">
                <a class="page-link" href="?page=${i}&limit=${limit}">${i}</a>
            </li>
        `;
			}

			if(currentPage < totalPages) {
				paginationHTML += `
            <li class="page-item">
                <a class="page-link" href="?page=${currentPage + 1}&limit=${limit}">
                    <span>Next &raquo;</span>
                </a>
            </li>
        `;
			}

			paginationContainer.innerHTML = paginationHTML;
		}

		const performSearch = debounce(async (query) => {
			try {
				const response = await fetch(`/admin/userManagement/search?query=${query}`, {
					method: 'GET',
					headers: {
						'Accept': 'application/json'
					}
				});

				if(!response.ok) {
					throw new Error('Search failed');
				}

				const data = await response.json();
				updateTable(data.users);
				updatePagination(data.currentPage, data.totalPages, 10);

			} catch (error) {
				console.error('Error performing search:', error);
				Swal.fire({
					icon: 'error',
					title: 'Search Error',
					text: 'Failed to perform search. Please try again.',
				});
			}
		}, 300);

		function attachEventListeners() {
			document.querySelectorAll('.btn-ban').forEach(button => {
				button.addEventListener('click', async function() {
				});
			});

			document.querySelectorAll('.btn-view').forEach(button => {
				button.addEventListener('click', async function() {
				});
			});
		}

		document.addEventListener('DOMContentLoaded', function() {
			const searchInput = document.querySelector('.search input');
			const searchForm = document.querySelector('.search');

			searchInput.addEventListener('input', (e) => {
				performSearch(e.target.value);
			});

			searchForm.addEventListener('submit', (e) => {
				e.preventDefault();
				performSearch(searchInput.value);
			});
		});
	</script>

</body>

</html>