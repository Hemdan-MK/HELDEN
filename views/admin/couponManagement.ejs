<!DOCTYPE html>
<html lang="en">

<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<title>Coupon Management</title>
<link rel="stylesheet" href="/admin/admin.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">

<style>
	body {
		font-family: 'Poppins', sans-serif;

	}

	.container-fluid {
		flex: 1;
	}

	.cc {
		background-color: #121212;
		min-height: 100vh;
		/* padding: 20px; */
		width: 200%;
	}

	.card {
		color: white;
		background-color: transparent;
		border: none;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
	}

	.card-title {
		color: #fff;
		font-weight: bold;
	}

	.table-cont {
		border-radius: 16px;
		border: 1px solid yellow;
	}



	table {
		width: 100%;
		border-collapse: collapse;
		background-color: #1e1e2d;
	}

	table thead tr {
		text-transform: uppercase;
		border: 1px solid #444;
		text-align: center;
	}

	table tbody tr {
		border: 0px solid #444;
		text-align: center;
		color: #fff;
	}

	table tr:nth-child(even) {
		background: #1b1b2f;
	}

	table tr:hover {
		background: #3b3b5e;
		color: white;
	}

	

	.modal-content {
		background-color: #1e2029;
		color: white;
	}

	.form-control {
		background-color: #2e3241;
		color: #fff;
		border: 1px solid #444;
	}

	.form-control:focus {
		background-color: #2e3241;
		color: #fff;
		border-color: #007bff;
		outline: none;
		box-shadow: none;
	}
</style>
</head>

<body>
	<div class="container-scroller bg-danger">
		<!-- Sidebar -->
		<%- include('./layout/sidebar') %>

		<div class="container-fluid page-body-wrapper  ">
			<div class="row cc">
				<div class="col-12">
					<div class="card">
						<div class="card-body ">
							<div class="d-flex justify-content-between">
								<h4 class="card-title">Coupon Management</h4>
								<div class="text-right mb-3">
									<button class="btn  btn-outline-success" id="addCouponBtn">Add New Coupon</button>
								</div>
							</div>
							<div class="mt-4 " style="">

								<!-- Coupon Table -->
								<div class="table-responsive " style=" border: 1px solid #2e2e2e; border-radius: 16px; background-color: #1e1e2d;">
									<table class="table text-center">
										<thead>
											<tr>
												<th style="color: #00adb5 !important;">Coupon Code</th>
												<th style="color: #00adb5 !important;">Valid From</th>
												<th style="color: #00adb5 !important;">Valid Upto</th>
												<th style="color: #00adb5 !important;">Discount (%)</th>
												<th style="color: #00adb5 !important;">Min Price</th>
												<th style="color: #00adb5 !important;">Max Discount</th>
												<th style="color: #00adb5 !important;">Coupon Count</th>
												<th style="color: #00adb5 !important;">Status</th>
												<th style="color: #00adb5 !important;">Actions</th>
											</tr>
										</thead>
										<tbody id="couponTableBody">
											<!-- Dynamic Content -->
										</tbody>
									</table>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- Add/Update Modal -->
		<div class="modal fade" id="couponModal" tabindex="-1" role="dialog">
			<div class="modal-dialog modal-lg" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="modalTitle">Add Coupon</h5>
						<button type="button" class="close" data-dismiss="modal">
							<span>&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<form id="couponForm">
							<input type="hidden" id="couponId" />
							<div class="form-row">
								<div class="form-group col-md-6">
									<label>Coupon Code</label>
									<input type="text" class="form-control" id="couponCode" required>
								</div>
								<div class="form-group col-md-6">
									<label>Discount (%)</label>
									<input type="number" class="form-control" id="discountPercentage" required>
								</div>
							</div>
							<div class="form-row">
								<div class="form-group col-md-6">
									<label>Valid From</label>
									<input type="date" class="form-control" id="validFrom" required>
								</div>
								<div class="form-group col-md-6">
									<label>Valid Upto</label>
									<input type="date" class="form-control" id="validUpto" required>
								</div>
							</div>
							<div class="form-row">
								<div class="form-group col-md-4">
									<label>Min Price</label>
									<input type="number" class="form-control" id="minPrice" required>
								</div>
								<div class="form-group col-md-4">
									<label>Max Discount</label>
									<input type="number" class="form-control" id="maxDiscount" required>
								</div>
								<div class="form-group col-md-4">
									<label>Coupon Count</label>
									<input type="number" class="form-control" id="couponCount" required>
								</div>
							</div>
							<div class="form-group">
								<label>Status</label>
								<select class="form-control" id="status" required>
									<option value="true">Active</option>
									<option value="false">Inactive</option>
								</select>
							</div>
							<button type="submit" class="btn btn-success">Save</button>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- Scripts -->
	<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
	<script>
		const couponForm = document.getElementById('couponForm');
		const couponModal = $('#couponModal');
		let editingCouponId = null;

		document.addEventListener('DOMContentLoaded', fetchCoupons);

		// Fetch Coupons
		async function fetchCoupons() {
			const res = await fetch('/admin/couponManagement', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				}
			});
			const coupons = await res.json();
			const tableBody = document.getElementById('couponTableBody');
			tableBody.innerHTML = '';
			coupons.forEach(coupon => {
				tableBody.innerHTML += `
                    <tr>
                        <td class='hi'>${coupon.couponCode}</td>
                        <td class='hi'>${new Date(coupon.validFrom).toLocaleDateString()}</td>
                        <td class='hi'>${new Date(coupon.validUpto).toLocaleDateString()}</td>
                        <td class='hi'>${coupon.discountPercentage}</td>
                        <td class='hi'>${coupon.minPrice}</td>
                        <td class='hi'>${coupon.maxDiscount}</td>
                        <td class='hi'>${coupon.couponCount}</td>
                        <td class='hi'>${coupon.status ? 'Active' : 'Inactive'}</td>
                        <td class='hi'>
                            <button class="btn  btn-sm btn-outline-warning" onclick="openModal('${coupon._id}')">Edit</button>
                            <button class="btn btn-outline-danger btn-sm" onclick="deleteCoupon('${coupon._id}')">Delete</button>
                        </td>
                    </tr>`;
			});
		}

		// Add Event Listener for Add Coupon Button
		document.getElementById('addCouponBtn').addEventListener('click', () => {
			openModal(); // Open Modal for Adding Coupon
		});

		// Open Modal for Add/Update
		function openModal(id = null) {
			editingCouponId = id;
			couponForm.reset(); // Reset form fields
			document.getElementById('modalTitle').innerText = id ? 'Update Coupon' : 'Add Coupon';

			if(id) {
				fetch(`/admin/couponManagement/${id}`)
					.then(res => res.json())
					.then(coupon => {
						console.log('coupons : ' + coupon);
						document.getElementById('couponCode').value = coupon.couponCode;
						document.getElementById('validFrom').value = coupon.validFrom.split('T')[0];
						document.getElementById('validUpto').value = coupon.validUpto.split('T')[0];
						document.getElementById('discountPercentage').value = coupon.discountPercentage;
						document.getElementById('minPrice').value = coupon.minPrice;
						document.getElementById('maxDiscount').value = coupon.maxDiscount;
						document.getElementById('couponCount').value = coupon.couponCount;
						document.getElementById('status').value = coupon.status;
					});
			}
			couponModal.modal('show');
		}

		// Submit Form
		couponForm.addEventListener('submit', async (e) => {
			e.preventDefault();


			const couponCode = couponForm.couponCode.value.trim();
			const couponRegex = /^[A-Z0-9]{6,12}$/;
			if(!couponRegex.test(couponCode)) {
				Swal.fire({
					icon: 'error',
					title: 'Invalid Coupon Code',
					text: 'Coupon code must be 6-12 characters long and contain only uppercase letters and digits.',
				});
				return;
			}

			// Validate discount percentage
			const discountPercentage = Number(couponForm.discountPercentage.value);
			if(discountPercentage <= 0 || discountPercentage > 70) {
				Swal.fire({
					icon: 'error',
					title: 'Invalid Discount Percentage',
					text: 'Discount percentage must be between 1% and 70%.',
				});
				return;
			}

			// Validate dates
			const validFrom = new Date(couponForm.validFrom.value);
			const validUpto = new Date(couponForm.validUpto.value);
			if(validFrom >= validUpto) {
				Swal.fire({
					icon: 'error',
					title: 'Invalid Date Range',
					text: 'The "Valid From" date must be earlier than the "Valid Upto" date.',
				});
				return;
			}

			// Validate minPrice and maxDiscount
			const minPrice = Number(couponForm.minPrice.value);
			const maxDiscount = Number(couponForm.maxDiscount.value);
			if(minPrice <= 0 || maxDiscount <= 0) {
				Swal.fire({
					icon: 'error',
					title: 'Invalid Values',
					text: 'Min Price and Max Discount must be positive numbers.',
				});
				return;
			}

			if(maxDiscount > minPrice) {
				Swal.fire({
					icon: 'error',
					title: 'Max Discount Exceeds Min Price',
					text: 'Max Discount cannot be greater than the Minimum Price.',
				});
				return;
			}

			const data = {
				couponCode: couponForm.couponCode.value,
				validFrom: couponForm.validFrom.value,
				validUpto: couponForm.validUpto.value,
				discountPercentage: couponForm.discountPercentage.value,
				minPrice: couponForm.minPrice.value,
				maxDiscount: couponForm.maxDiscount.value,
				couponCount: couponForm.couponCount.value,
				status: couponForm.status.value === "true"
			};

			const url = editingCouponId ? `/admin/couponManagement/edit/${editingCouponId}` : '/admin/couponManagement/add';
			const method = editingCouponId ? 'PUT' : 'POST';

			await fetch(url, {
				method,
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify(data),
			});

			couponModal.modal('hide');
			fetchCoupons(); // Refresh table
		});

		// Delete Coupon
		async function deleteCoupon(id) {
			if(confirm('Are you sure you want to delete this coupon?')) {
				await fetch(`/admin/couponManagement/delete/${id}`, {
					method: 'DELETE'
				});
				fetchCoupons();
			}
		}
	</script>

</body>

</html>