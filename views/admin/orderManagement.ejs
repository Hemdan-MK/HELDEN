<!DOCTYPE html>
<html lang="en">

<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<title>Category Panel</title>
<link rel="stylesheet" href="/admin/admin.css">
<!-- Bootstrap for modal styling -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
	body {
		font-family: 'Poppins', sans-serif;
		background-color: #121212;
		color: white;
		margin: 0;
		padding: 0;
	}

	.card {
		background: linear-gradient(135deg, #1e1e2d, #2a2f45);
		color: white;
		border: none;
		border-radius: 15px;
		box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
		transition: transform 0.3s ease, box-shadow 0.3s ease;
		padding: 20px;
	}

	.card:hover {
		transform: translateY(-5px);
		box-shadow: 0 6px 15px rgba(0, 0, 0, 0.5);
	}

	/* Table Styles */
	.table-responsive {
		margin: 20px 0;
		border-radius: 8px;
		overflow: hidden;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
	}

	table {
		width: 100%;
		border-collapse: collapse;
		background-color: #212338;
	}

	table thead tr {
		text-transform: uppercase;
		background-color: #2c2f48;
		color: #fff;
		border-bottom: 2px solid #444;
		text-align: center;
	}

	table tbody tr {
		text-align: center;
		color: #e0e0e0;
		transition: background-color 0.3s ease, transform 0.2s ease;
	}

	table tr:nth-child(even) {
		background: #1b1b2f;
	}

	table tr:hover {
		background: #44446b;
		color: white;
		transform: scale(1.02);
		cursor: pointer;
	}

	table tbody tr td {
		padding: 10px;
		border-bottom: 1px solid #333;
	}

	table tbody tr:last-child td {
		border-bottom: 0;
	}

	.btn {
		font-size: 12px;
		color: #fff;
		background-color: #5a67d8;
		border: none;
		padding: 5px 10px;
		border-radius: 4px;
		transition: background-color 0.3s ease, transform 0.2s ease;
	}

	.btn:hover {
		background-color: #434aa8;
		transform: scale(1.05);
	}

	.badge {
		font-size: 10px;
		padding: 3px 6px;
		border-radius: 50%;
	}


	/* Pagination Styles */
	.pagination {
		background-color: #222;
	}

	.pagination .page-item.active .page-link {
		background-color: #28a745;
		border-color: #28a745;
	}

	/* Modal Styles */

	.modal-content {
		background-color: #292d41;
		color: #fff;
		border-radius: 10px;
	}

	.modal-header {
		border-bottom: none;
	}

	.modal-footer {
		border-top: none;
	}
</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> <!-- SweetAlert CDN -->

</head>

<body>
	<div class="container-scroller">
		<!-- Sidebar -->
		<%- include('./layout/sidebar') %>

		<!-- Main Content -->
		<div class=" w-100 d-flex flex-column min-vh-100">
			<div class="col">
				<div class="col-12 grid-margin">
					<h4 class="card-title text-light">Order Management</h4>
					<hr class="text-white">
					<div class="card border-0 rounded-3 shadow-sm bg-dark">
						<div class="card-body">

							<!-- Orders Table -->
							<div class="table-responsive">
								<table class="table table-dark table-striped text-center">
								  <thead>
									<tr>
									  <th style="color: #00adb5 !important;">Index</th>
									  <th style="color: #00adb5 !important;">Order No</th>
									  <th style="color: #00adb5 !important;">User Name</th>
									  <th style="color: #00adb5 !important;">Date</th>
									  <th style="color: #00adb5 !important;">Price</th>
									  <th style="color: #00adb5 !important;">Payment Status</th>
									  <th style="color: #00adb5 !important;">Status</th>
									  <th style="color: #00adb5 !important;">Payment Mode</th>
									  <th style="color: #00adb5 !important;">Action</th>
									</tr>
								  </thead>
								  <tbody>
									<% orders.forEach((order, index) => { %>
									  <tr>
										<td><%= index + 1 %></td>
										<td><%= order._id %></td>
										<td><%= order.userId.name %></td>
										<td><%= new Date(order.createdAt).toLocaleDateString() %></td>
										<td>â‚¹ <%= order.totalAmount.toFixed(2) %></td>
										<td><%= order.paymentStatus %></td>
										<td><%= order.status %></td>
										<td><%= order.paymentMethod %></td>
										<td>
										  <button class="btn btn-info position-relative btn-sm" onclick="viewOrder('<%= order._id %>')">
											View
											<% if (order.status === 'Requested') { %>
											  <span class="badge bg-warning position-absolute" style="top: -5px; right: -5px;">1</span>
											<% } %>
										  </button>
										</td>
									  </tr>
									<% }); %>
								  </tbody>
								</table>
							  </div>							  

							<!-- Pagination -->
							<div class="d-flex justify-content-center mt-3">
								<ul class="pagination pagination-dark">
									<% if (currentPage > 1) { %>
									<li class="page-item">
										<a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit %>">Previous</a>
									</li>
									<% } %>

									<% for (let i = 1; i <= totalPages; i++) { %>
									<li class="page-item <%= currentPage === i ? 'active' : '' %>">
										<a class="page-link" href="?page=<%= i %>&limit=<%= limit %>">
											<%= i %>
										</a>
									</li>
									<% } %>

									<% if (currentPage < totalPages) { %>
									<li class="page-item">
										<a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit %>">Next</a>
									</li>
									<% } %>
								</ul>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- Modal for Viewing Order Details -->
		<div class="modal fade" id="orderModal" tabindex="-1" role="dialog" aria-labelledby="orderModalLabel" aria-hidden="true">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="orderModalLabel">Order Details</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<form id="orderForm">
							<div class="form-group">
								<label for="orderNo">Order No</label>
								<input type="text" class="form-control" id="orderNo" disabled>
							</div>
							<div class="form-group">
								<label for="userName">User Name</label>
								<input type="text" class="form-control" id="userName" disabled>
							</div>
							<div class="form-group">
								<label for="orderItems">Order Items</label>
								<div id="orderItemsContainer"></div>
							</div>
							<div class="form-group">
								<label for="shippingStatus">Shipping Status</label>
								<select class="form-control" id="shippingStatus">
									<option value="Pending">Pending</option>
									<option value="Shipping">Shipping</option>
									<option value="Completed">Completed</option>
									<option value="Returned">Returned</option>
									<option value="Requested">Requested</option>
									<option value="Rejected">Rejected</option>
									<option value="Cancelled">Cancelled</option>
								</select>
							</div>
							<div class="form-group">
								<label for="paymentStatus">Payment Status</label>
								<select class="form-control" id="paymentStatus">
									<option value="Pending">Pending</option>
									<option value="Completed">Completed</option>
									<option value="Failed">Failed</option>
								</select>
							</div>
							<div class="form-group">
								<label for="totalAmount">Total Amount</label>
								<input type="text" class="form-control" id="totalAmount" disabled>
							</div>
							<div class="ret" id="ret">
								<div class="form-group">
									<label for="reason">Reason</label>
									<textarea class="form-control" id="reason" rows="3" readonly></textarea>
								</div>
								<div class="form-group d-flex justify-content-between">
									<button type="button" class="btn btn-danger" id="rejectBtn">Reject</button>
									<button type="button" class="btn btn-success" id="acceptBtn">Accept</button>
								</div>
							</div>
						</form>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
						<button type="button" class="btn btn-primary" id="updateStatusBtn">Status Action</button>
					</div>
				</div>
			</div>
		</div>
	</div>


	<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

	<script>
		// Function to populate and show order details in the modal
		function viewOrder(orderId) {
			fetch(`/admin/orderManagement/getOrderDetails/${orderId}`)
				.then(response => response.json())
				.then(order => {

					// Populate the order details in the modal
					document.getElementById('orderNo').value = order._id;
					document.getElementById('userName').value = order.userId.name;

					// Build order items HTML to show product details along with images
					const orderItemsHtml = order.orderItems.map(item => {
						return `
            <div class="row mb-3">
              <div class="col-2">
                <img src="${item.productId.images[0]}" alt="${item.productId.name}" class="img-fluid" style="max-height: 50px; object-fit: cover;" />
              </div>
              <div class="col-10">
                <div class="d-flex justify-content-between">
                  <span><strong>Product:</strong> ${item.productId.name}</span>
                  <span><strong>Price:</strong> Rs.${item.price}</span>
                </div>
                <div class="d-flex justify-content-between">
                  <span><strong>Quantity:</strong> ${item.quantity}</span>
                </div>
              </div>
            </div>
          `;

					}).join('');

					// Set the order items HTML to an element (not a text input)
					document.getElementById('orderItemsContainer').innerHTML = orderItemsHtml;
					if(order.status !== 'Requested') {
						document.getElementById('ret').style.display = 'none';
					}
					document.getElementById('shippingStatus').value = order.status;
					document.getElementById('paymentStatus').value = order.paymentStatus;
					document.getElementById('totalAmount').value = order.totalAmount;
					document.getElementById('reason').value = order.refundReason;

					// Check if the order status is "Returned" or "Completed"
					if(order.status === 'Returned' || order.status === 'Completed' || order.status === 'Cancelled' || order.status === 'Rejected' || order.status === 'Requested') {
						// Disable editing of shipping and payment status if the order is Returned or Completed
						document.getElementById('shippingStatus').disabled = true;
						document.getElementById('paymentStatus').disabled = true;
						document.getElementById('updateStatusBtn').disabled = true; // Optionally disable the update button
					} else {
						document.getElementById('shippingStatus').disabled = false;
						document.getElementById('paymentStatus').disabled = false;
						document.getElementById('updateStatusBtn').disabled = false; // Enable the update button
					}



					// Show the modal
					$('#orderModal').modal('show');
				})
				.catch(err => console.error('Error fetching order details:', err));
		}

		// Update the order status and payment status
		document.getElementById('updateStatusBtn').addEventListener('click', () => {
			const orderId = document.getElementById('orderNo').value;
			const shippingStatus = document.getElementById('shippingStatus').value;
			const paymentStatus = document.getElementById('paymentStatus').value;

			fetch(`/admin/orderManagement/updateOrderStatus/${orderId}`, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({
						shippingStatus,
						paymentStatus
					})
				})
				.then(response => response.json())
				.then(data => {
					$('#orderModal').modal('hide');
					Swal.fire({
						icon: 'info', // Default to an 'info' icon, you can adjust based on the type of message
						title: 'Message',
						text: data.message,
						confirmButtonColor: '#3085d6', // Blue color for confirmation
						confirmButtonText: 'OK'
					}).then(() => {
						location.reload(); // Reload to reflect changes
					})
				})
				.catch(error => console.error('Error updating status:', error));
		});

		// Handle accept and reject actions for the reason
		document.getElementById('acceptBtn').addEventListener('click', () => {
			fetch(`/admin/orderManagement/acceptReason/${document.getElementById('orderNo').value}`, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
				})
				.then(response => response.json())
				.then(data => {
					Swal.fire('Accepted', data.message, 'success').then(() => {
						$('#orderModal').modal('hide');
					})
				})
				.catch(error => console.error('Error accepting reason:', error));
		});

		document.getElementById('rejectBtn').addEventListener('click', () => {
			fetch(`/admin/orderManagement/rejectReason/${document.getElementById('orderNo').value}`, {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					}
				})
				.then(response => response.json())
				.then(data => {
					Swal.fire('Rejected', data.message, 'error');
				})
				.catch(error => console.error('Error rejecting reason:', error));
		});
	</script>

</body>

</html>